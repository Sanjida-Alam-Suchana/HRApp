@model IEnumerable<HRApp.Models.Employee>
@using HRApp.Models
@{
    ViewData["Title"] = "Employee List";
    var companies = ViewBag.Companies as List<Company>;
}

<div class="container mt-4">
    <h2>Employee List</h2>

    <div class="form-group mb-3">
        <label for="companyDropdown">Filter by Company</label>
        <select id="companyDropdown" class="form-control" onchange="setCompany(this.value)">
            <option value="">All Companies</option>
            @foreach (var company in companies ?? new List<Company>())
            {
                <option value="@company.ComId">@company.ComName</option>
            }
        </select>
    </div>

    <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal">+ Add Employee</button>

    @Html.AntiForgeryToken()

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Employee Code</th>
                <th>Name</th>
                <th>Image</th>
                <th>Company</th>
                <th>Shift</th>
                <th>Department</th>
                <th>Designation</th>
                <th>Gender</th>
                <th>Gross Salary</th>
                <th>Basic</th>
                <th>HRent</th>
                <th>Medical</th>
                <th>Others</th>
                <th>Join Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="employeeTable">
            @foreach (var item in Model)
            {
                var companyName = item.Company?.ComName ?? "N/A";
                var shiftName = item.Shift?.ShiftName ?? "N/A";
                var deptName = item.Department?.DeptName ?? "N/A";
                var desigName = item.Designation?.DesigName ?? "N/A";
                <tr id="row-@item.EmpId" data-empid="@item.EmpId" data-comid="@item.ComId" data-empcode="@item.EmpCode" data-empname="@item.EmpName" data-shiftid="@item.ShiftId" data-deptid="@item.DeptId" data-desigid="@item.DesigId" data-gender="@((int)item.Gender)" data-gross="@item.Gross" data-dtjoin="@item.DtJoin.ToString("yyyy-MM-dd")" data-basic="@item.Basic" data-hrent="@item.HRent" data-medical="@item.Medical" data-others="@item.Others" data-employeeimage="@item.EmployeeImage">
                    <td>@item.EmpCode</td>
                    <td>@item.EmpName</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.EmployeeImage))
                        {
                            <img src="@item.EmployeeImage" alt="Employee Image" width="50" height="50" />
                        }
                        else
                        {
                            <span>No Image</span>
                        }
                    </td>
                    <td>@companyName</td>
                    <td>@shiftName</td>
                    <td>@deptName</td>
                    <td>@desigName</td>
                    <td>@item.Gender</td>
                    <td>@item.Gross</td>
                    <td>@item.Basic</td>
                    <td>@item.HRent</td>
                    <td>@item.Medical</td>
                    <td>@item.Others</td>
                    <td>@item.DtJoin.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-warning btn-sm edit-btn">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteEmployee('@item.EmpId')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
               <form id="createForm" method="post" action="@Url.Action("EmployeeCreate", "Employees")" enctype="multipart/form-data">
                     @Html.AntiForgeryToken()
                    <div class="form-group mb-3">
                        <label for="createComId">Company</label>
                        <select id="createComId" name="ComId" class="form-control">
                            <option value="">Select Company</option>
                            @foreach (var company in companies ?? new List<Company>())
                            {
                                <option value="@company.ComId">@company.ComName</option>
                            }
                        </select>
                        <div id="createComId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createEmpCode">Employee Code</label>
                        <input type="text" class="form-control" id="createEmpCode" name="EmpCode" />
                        <div id="createEmpCode-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createEmpName">Employee Name</label>
                        <input type="text" class="form-control" id="createEmpName" name="EmpName" />
                        <div id="createEmpName-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createShiftId">Shift</label>
                        <select id="createShiftId" name="ShiftId" class="form-control" >
                            <option value="">Select Shift</option>
                        </select>
                        <div id="createShiftId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createDeptId">Department</label>
                        <select id="createDeptId" name="DeptId" class="form-control" >
                            <option value="">Select Department</option>
                        </select>
                        <div id="createDeptId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createDesigId">Designation</label>
                        <select id="createDesigId" name="DesigId" class="form-control" >
                            <option value="">Select Designation</option>
                        </select>
                        <div id="createDesigId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createGender">Gender</label>
                        <select id="createGender" name="Gender" class="form-control">
                            <option value="">Select Gender</option>
                            <option value="1">Male</option>
                            <option value="2">Female</option>
                            <option value="3">Other</option>
                        </select>
                        <div id="createGender-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createGross">Gross Salary</label>
                        <input type="number" class="form-control" id="createGross" name="Gross" step="0.01" />
                        <div id="createGross-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createDtJoin">Join Date</label>
                        <input type="date" class="form-control" id="createDtJoin" name="DtJoin" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        <div id="createDtJoin-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="createEmployeeImageFile">Employee Image</label>
                        <input type="file" class="form-control" id="createEmployeeImageFile" name="EmployeeImageFile" accept="image/*" />
                        <div id="createEmployeeImageFile-error" class="text-danger"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="editEmpId" name="EmpId" />
                    <div class="form-group mb-3">
                        <label for="editComId">Company</label>
                        <select id="editComId" name="ComId" class="form-control">
                            <option value="">Select Company</option>
                            @foreach (var company in companies ?? new List<Company>())
                            {
                                <option value="@company.ComId">@company.ComName</option>
                            }
                        </select>
                        <div id="editComId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editEmpCode">Employee Code</label>
                        <input type="text" class="form-control" id="editEmpCode" name="EmpCode" />
                        <div id="editEmpCode-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editEmpName">Employee Name</label>
                        <input type="text" class="form-control" id="editEmpName" name="EmpName" />
                        <div id="editEmpName-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editShiftId">Shift</label>
                        <select id="editShiftId" name="ShiftId" class="form-control" >
                            <option value="">Select Shift</option>
                        </select>
                        <div id="editShiftId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editDeptId">Department</label>
                        <select id="editDeptId" name="DeptId" class="form-control" >
                            <option value="">Select Department</option>
                        </select>
                        <div id="editDeptId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editDesigId">Designation</label>
                        <select id="editDesigId" name="DesigId" class="form-control" >
                            <option value="">Select Designation</option>
                        </select>
                        <div id="editDesigId-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editGender">Gender</label>
                        <select id="editGender" name="Gender" class="form-control">
                            <option value="">Select Gender</option>
                            <option value="1">Male</option>
                            <option value="2">Female</option>
                            <option value="3">Other</option>
                        </select>
                        <div id="editGender-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editGross">Gross Salary</label>
                        <input type="number" class="form-control" id="editGross" name="Gross" step="0.01" />
                        <div id="editGross-error" class="text-danger"></div>
                    </div>
                    <div class="form-group mb-2">
                        <label for="editDtJoin">Join Date</label>
                        <input type="date" class="form-control" id="editDtJoin" name="DtJoin" />
                        <div id="editDtJoin-error" class="text-danger"></div>
                    </div>
                    <div id="currentImage" class="mb-2"></div>
                    <div class="form-group mb-2">
                        <label for="editEmployeeImageFile">Upload New Image (optional)</label>
                        <input type="file" class="form-control" id="editEmployeeImageFile" name="EmployeeImageFile" accept="image/*" />
                        <div id="editEmployeeImageFile-error" class="text-danger"></div>
                    </div>
                    <button type="submit" class="btn btn-primary">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Success</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body"></div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function getCookie(name) {
            let match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
            return match ? match[2] : null;
        }

        function setCompany(comId) {
            document.cookie = "SelectedComId=" + comId + "; path=/";
            location.reload();
        }

        function deleteEmployee(id) {
            if (confirm("Are you sure you want to delete this employee?")) {
                $.ajax({
                    url: '/Employees/Delete',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        id: id
                    },
                    success: function (response) {
                        alert(response.message);
                        if (response.success) {
                            $('#row-' + id).remove();
                        }
                    },
                    error: function () {
                        alert("Failed to delete employee.");
                    }
                });
            }
        }

        function loadFilteredDropdowns(comId, selectedShiftId, selectedDeptId, selectedDesigId) {
            if (!comId) {
                console.warn('No comId provided');
                $('#createShiftId, #editShiftId, #createDeptId, #editDeptId, #createDesigId, #editDesigId')
                    .empty().append('<option value="">No data available</option>').prop('disabled', true);
                return Promise.resolve();
            }

            return Promise.all([
                $.getJSON(`/Employees/GetShiftsByCompany?comId=${comId}`)
                    .then(data => {
                        console.log('Shifts:', data);
                        var shiftSelect = $('#createShiftId, #editShiftId');
                        shiftSelect.empty().append('<option value="">-- Select Shift --</option>');
                        if (data.length === 0) {
                            shiftSelect.append('<option value="">No shifts available</option>');
                        } else {
                            data.forEach(s => shiftSelect.append(`<option value="${s.shiftId}">${s.shiftName || 'Unnamed'}</option>`));
                        }
                        if (selectedShiftId) shiftSelect.val(selectedShiftId);
                        shiftSelect.prop('disabled', data.length === 0);
                    })
                    .fail((jqXHR, textStatus, error) => {
                        console.error('Error fetching shifts:', textStatus, error);
                        $('#createShiftId, #editShiftId').empty().append('<option value="">Error loading shifts</option>').prop('disabled', true);
                    }),
                $.getJSON(`/Employees/GetDeptsByCompany?comId=${comId}`)
                    .then(data => {
                        console.log('Departments:', data);
                        var deptSelect = $('#createDeptId, #editDeptId');
                        deptSelect.empty().append('<option value="">-- Select Department --</option>');
                        if (data.length === 0) {
                            deptSelect.append('<option value="">No departments available</option>');
                        } else {
                            data.forEach(d => deptSelect.append(`<option value="${d.deptId}">${d.deptName || 'Unnamed'}</option>`));
                        }
                        if (selectedDeptId) deptSelect.val(selectedDeptId);
                        deptSelect.prop('disabled', data.length === 0);
                    })
                    .fail((jqXHR, textStatus, error) => {
                        console.error('Error fetching departments:', textStatus, error);
                        $('#createDeptId, #editDeptId').empty().append('<option value="">Error loading departments</option>').prop('disabled', true);
                    }),
                $.getJSON(`/Employees/GetDesignationsByCompany?comId=${comId}`)
                    .then(data => {
                        console.log('Designations:', data);
                        var desigSelect = $('#createDesigId, #editDesigId');
                        desigSelect.empty().append('<option value="">-- Select Designation --</option>');
                        if (data.length === 0) {
                            desigSelect.append('<option value="">No designations available</option>');
                        } else {
                            data.forEach(d => desigSelect.append(`<option value="${d.desigId}">${d.desigName || 'Unnamed'}</option>`));
                        }
                        if (selectedDesigId) desigSelect.val(selectedDesigId);
                        desigSelect.prop('disabled', data.length === 0);
                    })
                    .fail((jqXHR, textStatus, error) => {
                        console.error('Error fetching designations:', textStatus, error);
                        $('#createDesigId, #editDesigId').empty().append('<option value="">Error loading designations</option>').prop('disabled', true);
                    })
            ]);
        }

        $(document).ready(function () {
            console.log('Document ready - jQuery is loaded');

            // Preselect company in create modal
            $('#createModal').on('shown.bs.modal', function () {
                var selectedComId = getCookie("SelectedComId");
                if (selectedComId) {
                    $('#createComId').val(selectedComId).trigger('change');
                }
            });

            $('#createComId, #editComId').change(function () {
                var comId = $(this).val();
                console.log('Selected comId:', comId);
                loadFilteredDropdowns(comId, null, null, null);
            });

            // Form validations
            function setupValidation(formId, prefix) {
                $(formId).validate({
                    rules: {
                        ComId: { required: true },
                        EmpCode: { required: true },
                        EmpName: { required: true },
                        ShiftId: { required: true },
                        DeptId: { required: true },
                        DesigId: { required: true },
                        Gender: { required: true },
                        Gross: { required: true, number: true, min: 1 },
                        DtJoin: { required: true },
                        EmployeeImageFile: { extension: "jpg|jpeg|png|gif" }
                    },
                    messages: {
                        ComId: "Please select a company.",
                        EmpCode: "Please enter employee code.",
                        EmpName: "Please enter employee name.",
                        ShiftId: "Please select shift.",
                        DeptId: "Please select department.",
                        DesigId: "Please select designation.",
                        Gender: "Please select gender.",
                        Gross: "Enter valid gross salary.",
                        DtJoin: "Enter join date.",
                        EmployeeImageFile: "Upload valid image file."
                    },
                    errorPlacement: function (error, element) {
                        error.appendTo("#" + prefix + element.attr("name") + "-error");
                    }
                });
            }

            setupValidation("#createForm", "create");
            setupValidation("#editForm", "edit");

            // Create form submission
            $("#createForm").submit(function (e) {
                console.log('Form submission intercepted');
                e.preventDefault();
                if ($(this).valid()) {
                    let formData = new FormData(this);
                    formData.append("__RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
                    let $button = $(this).find("button[type=submit]");
                    $button.text("Creating...").prop("disabled", true);

                    $.ajax({
                        url: '@Url.Action("EmployeeCreate", "Employees")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                    success: function (response) {
    console.log("Create response:", response);
    if (response.success) {
        $('#createModal').modal('hide');
        alert("Employee created successfully!"); 
        let newRow = `
            <tr id="row-${response.employee.empId}" data-empid="${response.employee.empId}" data-comid="${response.employee.comId}" data-empcode="${response.employee.empCode}" data-empname="${response.employee.empName}" data-shiftid="${response.employee.shiftId}" data-deptid="${response.employee.deptId}" data-desigid="${response.employee.desigId}" data-gender="${response.employee.gender}" data-gross="${response.employee.gross}" data-dtjoin="${response.employee.dtJoin}" data-basic="${response.employee.basic}" data-hrent="${response.employee.hRent}" data-medical="${response.employee.medical}" data-others="${response.employee.others}" data-employeeimage="${response.employee.employeeImage || ''}">
                <td>${response.employee.empCode}</td>
                <td>${response.employee.empName}</td>
                <td>${response.employee.employeeImage ? `<img src="${response.employee.employeeImage}" alt="Employee Image" width="50" height="50" />` : 'No Image'}</td>
                <td>${response.employee.company?.comName || 'N/A'}</td>
                <td>${response.employee.shift?.shiftName || 'N/A'}</td>
                <td>${response.employee.department?.deptName || 'N/A'}</td>
                <td>${response.employee.designation?.desigName || 'N/A'}</td>
                <td>${response.employee.gender === 1 ? 'Male' : response.employee.gender === 2 ? 'Female' : 'Other'}</td>
                <td>${response.employee.gross}</td>
                <td>${response.employee.basic}</td>
                <td>${response.employee.hRent}</td>
                <td>${response.employee.medical}</td>
                <td>${response.employee.others}</td>
                <td>${new Date(response.employee.dtJoin).toISOString().split('T')[0]}</td>
                <td><button class="btn btn-warning btn-sm edit-btn">Edit</button><button class="btn btn-danger btn-sm" onclick="deleteEmployee('${response.employee.empId}')">Delete</button></td>
            </tr>`;
        $('#employeeTable').append(newRow);
        $("#createForm")[0].reset();
    } else {
        alert(response.message || "Failed to create employee.");
    }
},
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", xhr.responseText, status, error);
                            alert("Failed to create employee: " + (xhr.responseJSON?.message || "Unknown error"));
                        },
                        complete: function () {
                            $button.text("Create").prop("disabled", false);
                        }
                    });
                }
            });

            // Edit form submit
$("#editForm").submit(function (e) {
    e.preventDefault();
    console.log("Edit form submission started");
    if ($(this).valid()) {
        var empId = $('#editEmpId').val();
        console.log("Submitting edit for EmpId:", empId);
        console.log("Form data:", {
            ComId: $('#editComId').val(),
            EmpCode: $('#editEmpCode').val(),
            EmpName: $('#editEmpName').val(),
            ShiftId: $('#editShiftId').val(),
            DeptId: $('#editDeptId').val(),
            DesigId: $('#editDesigId').val(),
            Gender: $('#editGender').val(),
            Gross: $('#editGross').val(),
            DtJoin: $('#editDtJoin').val()
        });
        var formData = new FormData(this);
        formData.append("__RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
        $.ajax({
            url: '/Employees/EmployeeEdit/' + empId,
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                console.log("Edit success response:", response);
                alert(response.message);
                if (response.success) location.reload();
            },
            error: function (xhr, status, error) {
                console.error("Edit error:", xhr.responseText, status, error);
                alert("Failed: " + (xhr.responseJSON?.message || "Unknown error"));
            }
        });
    } else {
        console.log("Form validation failed");
    }
});

            // Edit button populate modal
          $('.edit-btn').click(function () {
    var row = $(this).closest('tr');
    $('#editEmpId').val(row.data('empid'));
    $('#editEmpCode').val(row.data('empcode'));
    $('#editEmpName').val(row.data('empname'));
    $('#editGender').val(row.data('gender'));
    $('#editGross').val(row.data('gross'));
    $('#editDtJoin').val(row.data('dtjoin'));

    var employeeImage = row.data('employeeimage');
    $('#currentImage').html(employeeImage ? `<img src="${employeeImage}" style="max-width:200px;" /><p>Current image (upload new to replace)</p>` : '<p>No current image</p>');

    var comId = row.data('comid');
    $('#editComId').val(comId).trigger('change');

    console.log("Loading dropdowns for ComId:", comId, "with values:", {
        ShiftId: row.data('shiftid'),
        DeptId: row.data('deptid'),
        DesigId: row.data('desigid')
    });

    loadFilteredDropdowns(comId, row.data('shiftid'), row.data('deptid'), row.data('desigid')).then(() => {
        $('#editModal').modal('show');
    });
});
        });
        function loadFilteredDropdowns(comId, selectedShiftId, selectedDeptId, selectedDesigId) {
    if (!comId) {
        console.warn('No comId provided');
        $('#createShiftId, #editShiftId, #createDeptId, #editDeptId, #createDesigId, #editDesigId')
            .empty().append('<option value="">No data available</option>').prop('disabled', true);
        return Promise.resolve();
    }

    return Promise.all([
        $.getJSON(`/Employees/GetShiftsByCompany?comId=${comId}`)
            .then(data => {
                console.log('Shifts loaded:', data);
                var shiftSelect = $('#editShiftId'); // Only edit modal for this context
                shiftSelect.empty().append('<option value="">-- Select Shift --</option>');
                if (data.length === 0) {
                    shiftSelect.append('<option value="">No shifts available</option>');
                } else {
                    data.forEach(s => shiftSelect.append(`<option value="${s.shiftId}">${s.shiftName || 'Unnamed'}</option>`));
                }
                if (selectedShiftId) shiftSelect.val(selectedShiftId);
                shiftSelect.prop('disabled', data.length === 0);
            })
            .fail((jqXHR, textStatus, error) => {
                console.error('Error fetching shifts:', textStatus, error);
                $('#editShiftId').empty().append('<option value="">Error loading shifts</option>').prop('disabled', true);
            }),
        $.getJSON(`/Employees/GetDeptsByCompany?comId=${comId}`)
            .then(data => {
                console.log('Departments loaded:', data);
                var deptSelect = $('#editDeptId');
                deptSelect.empty().append('<option value="">-- Select Department --</option>');
                if (data.length === 0) {
                    deptSelect.append('<option value="">No departments available</option>');
                } else {
                    data.forEach(d => deptSelect.append(`<option value="${d.deptId}">${d.deptName || 'Unnamed'}</option>`));
                }
                if (selectedDeptId) deptSelect.val(selectedDeptId);
                deptSelect.prop('disabled', data.length === 0);
            })
            .fail((jqXHR, textStatus, error) => {
                console.error('Error fetching departments:', textStatus, error);
                $('#editDeptId').empty().append('<option value="">Error loading departments</option>').prop('disabled', true);
            }),
        $.getJSON(`/Employees/GetDesignationsByCompany?comId=${comId}`)
            .then(data => {
                console.log('Designations loaded:', data);
                var desigSelect = $('#editDesigId');
                desigSelect.empty().append('<option value="">-- Select Designation --</option>');
                if (data.length === 0) {
                    desigSelect.append('<option value="">No designations available</option>');
                } else {
                    data.forEach(d => desigSelect.append(`<option value="${d.desigId}">${d.desigName || 'Unnamed'}</option>`));
                }
                if (selectedDesigId) desigSelect.val(selectedDesigId);
                desigSelect.prop('disabled', data.length === 0);
            })
            .fail((jqXHR, textStatus, error) => {
                console.error('Error fetching designations:', textStatus, error);
                $('#editDesigId').empty().append('<option value="">Error loading designations</option>').prop('disabled', true);
            })
    ]);
}
    </script>
}