@model IEnumerable<HRApp.Models.Employee>
@using HRApp.Models

@{
    ViewData["Title"] = "Employee Management";
    var companies = ViewBag.Companies as List<Company>;
}

<div class="container mt-4">
    <h2>Employee Management</h2>

    <!-- Button -->
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#employeeModal" onclick="openCreateModal()">+ Add Employee</button>

    <!-- Company Filter -->
    <div class="mb-3">
        <select id="companyDropdown" class="form-select w-50">
            <option value="">All Companies</option>
            @if (companies != null)
            {
                foreach (var c in companies)
                {
                    <option value="@c.ComId">@c.ComName</option>
                }
            }
        </select>
    </div>

    <!-- Employee Table -->
    <table class="table table-bordered table-striped" id="employeeTable">
        <thead>
            <tr>
                <th>Code</th>
                <th>Name</th>
                <th>Company</th>
                <th>Gender</th>
                <th>Shift</th>
                <th>Department</th>
                <th>Designation</th>
                <th>Gross</th>
                <th>Basic</th>
                <th>House Rent</th>
                <th>Medical</th>
                <th>Other</th>
                <th>Join Date</th>
                <th>Image</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="employeeTableBody">
            @foreach (var emp in Model)
            {
                <tr id="row-@emp.EmpId">
                    <td>@emp.EmpCode</td>
                    <td>@emp.EmpName</td>
                    <td>@emp.Company?.ComName</td>
                    <td>@emp.Gender</td>
                    <td>@emp.Shift?.ShiftName</td>
                    <td>@emp.Department?.DeptName</td>
                    <td>@emp.Designation?.DesigName</td>
                    <td>@emp.Gross</td>
                    <td>@emp.Basic</td>
                    <td>@emp.HRent</td>
                    <td>@emp.Medical</td>
                    <td>@emp.Others</td>
                    <td>@emp.DtJoin.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (!string.IsNullOrEmpty(emp.EmployeeImage))
                        {
                            <img src="@emp.EmployeeImage" width="50" height="50" class="img-thumbnail" />
                        }
                    </td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="openEditModal('@emp.EmpId')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteEmployee('@emp.EmpId')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Employee Modal -->
<div class="modal fade" id="employeeModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="employeeForm" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Employee</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="EmpId" name="EmpId" />

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label>Code</label>
                            <input type="text" id="EmpCode" name="EmpCode" class="form-control" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label>Name</label>
                            <input type="text" id="EmpName" name="EmpName" class="form-control" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label>Gender</label>
                            <select id="Gender" name="Gender" class="form-control" required>
                                <option value="1">Male</option>
                                <option value="2">Female</option>
                                <option value="3">Other</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label>Company</label>
                            <select id="ComId" name="ComId" class="form-control" required>
                                <option value="">--Select--</option>
                                @if (companies != null)
                                {
                                    foreach (var com in companies)
                                    {
                                        <option value="@com.ComId">@com.ComName</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Shift</label>
                            <select id="ShiftId" name="ShiftId" class="form-control"></select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Department</label>
                            <select id="DeptId" name="DeptId" class="form-control"></select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Designation</label>
                            <select id="DesigId" name="DesigId" class="form-control"></select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label>Gross Salary</label>
                            <input type="number" id="Gross" name="Gross" class="form-control" required />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Basic</label>
                            <input type="number" id="Basic" name="Basic" class="form-control" readonly />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>House Rent</label>
                            <input type="number" id="HRent" name="HRent" class="form-control" readonly />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Medical</label>
                            <input type="number" id="Medical" name="Medical" class="form-control" readonly />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label>Other</label>
                            <input type="number" id="Others" name="Others" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label>Join Date</label>
                            <input type="date" id="DtJoin" name="DtJoin" class="form-control" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label>Image</label>
                            <input type="file" id="imageFile" name="imageFile" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Function to escape HTML to prevent XSS
        function escapeHtml(text) {
            if (!text) return '';
            return text
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Auto calculate salary breakdown
        $("#Gross").on("input", function () {
            var gross = parseFloat($(this).val()) || 0;
            var basic = parseFloat((gross * 0.50).toFixed(2));
            var hrent = parseFloat((gross * 0.30).toFixed(2));
            var medical = parseFloat((gross * 0.10).toFixed(2));
            var others = parseFloat((gross - (basic + hrent + medical)).toFixed(2));

            $("#Basic").val(basic);
            $("#HRent").val(hrent);
            $("#Medical").val(medical);
            $("#Others").val(others);
        });

        // Load dependent dropdowns
        $("#ComId").change(function () {
            var comId = $(this).val();
            console.log("Modal Company selected:", comId); // Debug: Log company ID for modal
            if (comId) {
                $.getJSON('/Employees/GetShifts?comId=' + comId, function (data) {
                    $("#ShiftId").empty();
                    $.each(data, function (i, item) {
                        $("#ShiftId").append(`<option value="${item.shiftId}">${item.shiftName}</option>`);
                    });
                });

                $.getJSON('/Employees/GetDepartments?comId=' + comId, function (data) {
                    $("#DeptId").empty();
                    $.each(data, function (i, item) {
                        $("#DeptId").append(`<option value="${item.deptId}">${item.deptName}</option>`);
                    });
                });

                $.getJSON('/Employees/GetDesignations?comId=' + comId, function (data) {
                    $("#DesigId").empty();
                    $.each(data, function (i, item) {
                        $("#DesigId").append(`<option value="${item.desigId}">${item.desigName}</option>`);
                    });
                });
            } else {
                $("#ShiftId").empty();
                $("#DeptId").empty();
                $("#DesigId").empty();
            }
        });

        // Company Filter
        $("#companyDropdown").change(function () {
            var comId = $(this).val();
            console.log("Selected company ID:", comId); // Debug: Log selected company ID
            var url = comId ? '/Employees/GetEmployees?comId=' + comId : '/Employees/GetEmployees';
            console.log("Request URL:", url); // Debug: Log the request URL
            $("#employeeTableBody").html('<tr><td colspan="15">Loading...</td></tr>'); // Show loading indicator
            $.getJSON(url, function (data) {
                console.log("Response data:", data); // Debug: Log response data
                $("#employeeTableBody").empty();
                if (data.length === 0) {
                    $("#employeeTableBody").append('<tr><td colspan="15">No employees found.</td></tr>');
                    return;
                }
                $.each(data, function (i, emp) {
                    let row = `
                        <tr id="row-${emp.empId}">
                            <td>${escapeHtml(emp.empCode)}</td>
                            <td>${escapeHtml(emp.empName)}</td>
                            <td>${escapeHtml(emp.company)}</td>
                            <td>${escapeHtml(emp.gender)}</td>
                            <td>${escapeHtml(emp.shift || '')}</td>
                            <td>${escapeHtml(emp.department || '')}</td>
                            <td>${escapeHtml(emp.designation || '')}</td>
                            <td>${emp.gross}</td>
                            <td>${emp.basic}</td>
                            <td>${emp.hRent}</td>
                            <td>${emp.medical}</td>
                            <td>${emp.others}</td>
                            <td>${emp.dtJoin}</td>
                            <td>
                                ${emp.employeeImage ? `<img src="${emp.employeeImage}" width="50" height="50" class="img-thumbnail" />` : ''}
                            </td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="openEditModal('${emp.empId}')">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteEmployee('${emp.empId}')">Delete</button>
                            </td>
                        </tr>`;
                    $("#employeeTableBody").append(row);
                });
            }).fail(function (xhr, status, error) {
                console.error("Filter error:", {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    error: error
                });
                $("#employeeTableBody").html('<tr><td colspan="15">Error loading employees.</td></tr>');
                alert("Failed to filter employees: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        });

        // Open Create modal
        function openCreateModal() {
            $("#employeeForm")[0].reset();
            $("#EmpId").val('');
            $("#modalTitle").text("Add Employee");
            $("#ShiftId").empty();
            $("#DeptId").empty();
            $("#DesigId").empty();
            $("#ComId").val('').trigger('change');
        }

        // Open Edit modal
        function openEditModal(id) {
            console.log("Fetching employee with ID:", id); // Debug: Log employee ID
            $.getJSON('/Employees/GetEmployee/' + id, function (emp) {
                console.log("Employee data:", emp); // Debug: Log employee data
                $("#modalTitle").text("Edit Employee");
                $("#EmpId").val(emp.empId);
                $("#EmpCode").val(emp.empCode);
                $("#EmpName").val(emp.empName);
                $("#ComId").val(emp.comId).trigger("change");
                setTimeout(function () {
                    $("#ShiftId").val(emp.shiftId);
                    $("#DeptId").val(emp.deptId);
                    $("#DesigId").val(emp.desigId);
                }, 500);
                $("#Gender").val(emp.gender);
                $("#Gross").val(emp.gross).trigger("input");
                $("#DtJoin").val(emp.dtJoin);
                $("#employeeModal").modal("show");
            }).fail(function (xhr, status, error) {
                console.error("Edit fetch error:", xhr.responseText, status, error);
                alert("Failed to load employee data: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        }

        // Save (Create/Update)
        $("#employeeForm").submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            console.log("Form data being sent:", [...formData.entries()]); // Debug: Log form data
            var id = $("#EmpId").val();
            var url = id ? '/Employees/Edit/' + id : '/Employees/Create';
            console.log("Submitting to URL:", url); // Debug: Log submission URL
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    console.log("Save response:", res); // Debug: Log response
                    alert(res.message);
                    if (res.success) {
                        location.reload();
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Save error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to save employee: " + (xhr.responseJSON?.message || "Unknown error"));
                }
            });
        });

        // Delete
        function deleteEmployee(id) {
            if (!confirm("Are you sure you want to delete this employee?")) return;
            console.log("Deleting employee with ID:", id); // Debug: Log employee ID
            $.post('/Employees/Delete/' + id,
                { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                function (res) {
                    console.log("Delete response:", res); // Debug: Log response
                    alert(res.message);
                    if (res.success) {
                        $("#row-" + id).remove();
                    }
                }).fail(function (xhr, status, error) {
                    console.error("Delete error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to delete employee: " + (xhr.responseJSON?.message || "Unknown error"));
                });
        }
    </script>
}