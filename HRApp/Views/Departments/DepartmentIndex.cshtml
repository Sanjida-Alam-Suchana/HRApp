@model IEnumerable<HRApp.Models.Department>
@{
    ViewData["Title"] = "Departments";
    var companies = ViewBag.Companies as List<HRApp.Models.Company>;
}

<div class="container mt-4">
    <h2>Departments</h2>

    <!-- Button to Open Create Modal -->
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#departmentModal" onclick="openCreateModal()">+ Add Department</button>

    <!-- Company Filter -->
    <div class="mb-3">
        <select id="companyDropdown" class="form-select w-50">
            <option value="">All Companies</option>
            @foreach (var c in companies)
            {
                <option value="@c.ComId">@c.ComName</option>
            }
        </select>
    </div>

    <!-- Department Table -->
    <table class="table table-bordered table-striped" id="departmentTable">
        <thead>
            <tr>
                <th>Department Name</th>
                <th>Company</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="departmentTableBody">
            @foreach (var d in Model)
            {
                var companyName = companies.FirstOrDefault(c => c.ComId == d.ComId)?.ComName ?? "N/A";
                <tr id="row-@d.DeptId" data-comid="@d.ComId">
                    <td>@d.DeptName</td>
                    <td>@companyName</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="openEditModal('@d.DeptId')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteDepartment('@d.DeptId')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Department Modal -->
<div class="modal fade" id="departmentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="departmentForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Department</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="DeptId" name="DeptId" />
                    <div class="mb-3">
                        <label for="ComId">Company</label>
                        <select id="ComId" name="ComId" class="form-control" required>
                            <option value="">Select Company</option>
                            @foreach (var com in companies)
                            {
                                <option value="@com.ComId">@com.ComName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="DeptName">Department Name</label>
                        <input type="text" id="DeptName" name="DeptName" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Function to escape HTML to prevent XSS
        function escapeHtml(str) {
            if (typeof str !== 'string') return '';
            return str
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Open Create Modal
        function openCreateModal() {
            $("#departmentForm")[0].reset();
            $("#DeptId").val('');
            $("#modalTitle").text("Add Department");
            $("#ComId").val('');
            $("#departmentModal").modal("show");
        }

        // Open Edit Modal
        function openEditModal(id) {
            console.log("Fetching department with ID:", id);
            $.getJSON('/Departments/GetDepartment/' + id, function (res) {
                console.log("Department data:", res);
                if (!res.success || !res.department) {
                    alert("Failed to load department data: " + (res.message || "Invalid response"));
                    return;
                }
                var dept = res.department;
                $("#modalTitle").text("Edit Department");
                $("#DeptId").val(dept.deptId);
                $("#DeptName").val(dept.deptName);
                $("#ComId").val(dept.comId);
                $("#departmentModal").modal("show");
            }).fail(function (xhr, status, error) {
                console.error("Edit fetch error:", {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    error: error
                });
                alert("Failed to load department data: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        }

        // Save (Create/Update)
        $("#departmentForm").submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            console.log("Form data being sent:", [...formData.entries()]);
            var id = $("#DeptId").val();
            var url = id ? '/Departments/DepartmentEdit/' + id : '/Departments/DepartmentCreate';
            console.log("Submitting to URL:", url);
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (res) {
                    console.log("Save response:", res);
                    alert(res.message || "No message returned from server");
                    if (res.success && res.department) {
                        let d = res.department;
                        let deptId = d.deptId;
                        let deptName = escapeHtml(d.deptName);
                        let comId = d.comId;
                        let comName = escapeHtml(d.comName || 'N/A');
                        let row = `
                            <tr id="row-${deptId}" data-comid="${comId}">
                                <td>${deptName}</td>
                                <td>${comName}</td>
                                <td>
                                    <button class="btn btn-warning btn-sm" onclick="openEditModal('${deptId}')">Edit</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteDepartment('${deptId}')">Delete</button>
                                </td>
                            </tr>`;
                        if (id) {
                            $("#row-" + id).replaceWith(row);
                        } else {
                            $("#departmentTableBody").append(row);
                        }
                        $("#departmentModal").modal("hide");
                        $("#departmentForm")[0].reset();
                    } else {
                        console.error("Invalid response structure:", res);
                        alert("Failed to update table. Check console for details.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Save error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to save department: " + (xhr.responseJSON?.message || "Unknown error"));
                }
            });
        });

        // Delete Department
        function deleteDepartment(id) {
            if (!confirm("Are you sure you want to delete this department?")) return;
            console.log("Deleting department with ID:", id);
            $.post('/Departments/Delete/' + id,
                { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                function (res) {
                    console.log("Delete response:", res);
                    alert(res.message || "No message returned from server");
                    if (res.success) {
                        $("#row-" + id).remove();
                    }
                }).fail(function (xhr, status, error) {
                    console.error("Delete error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to delete department: " + (xhr.responseJSON?.message || "Unknown error"));
                });
        }

        // Company Filter
        $("#companyDropdown").change(function () {
            let comId = $(this).val();
            console.log("Selected comId:", comId);
            let url = comId ? '/Departments/GetDepartmentsByCompany?comId=' + comId : '/Departments/GetAllDepartments';
            console.log("Fetching departments from:", url);
            $("#departmentTableBody").html('<tr><td colspan="3">Loading...</td></tr>');
            $.getJSON(url, function (data) {
                console.log("Filter response:", data);
                $("#departmentTableBody").empty();
                if (data.length === 0 || (data.success === false)) {
                    $("#departmentTableBody").html('<tr><td colspan="3">No departments found.</td></tr>');
                    return;
                }
                $.each(data, function (i, d) {
                    let deptId = d.deptId;
                    let deptName = escapeHtml(d.deptName);
                    let comId = d.comId;
                    let comName = escapeHtml(d.comName || 'N/A');
                    let row = `
                        <tr id="row-${deptId}" data-comid="${comId}">
                            <td>${deptName}</td>
                            <td>${comName}</td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="openEditModal('${deptId}')">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteDepartment('${deptId}')">Delete</button>
                            </td>
                        </tr>`;
                    $("#departmentTableBody").append(row);
                });
            }).fail(function (xhr, status, error) {
                console.error("Filter error:", {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    error: error,
                    url: url
                });
                alert("Failed to filter departments: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        });
    </script>
}