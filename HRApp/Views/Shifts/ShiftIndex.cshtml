
@model IEnumerable<HRApp.Models.Shift>
@{
    ViewData["Title"] = "Shift Management";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <!-- Button to Open Create Modal -->
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#shiftModal" onclick="openShiftModal('create')">+ Add Shift</button>

    <!-- Filter Dropdown -->
    <div class="mb-3">
        <label for="companyDropdown">Filter by Company:</label>
        <select id="companyDropdown" class="form-select w-auto d-inline-block" style="max-width: 300px;">
            <option value="">All Companies</option>
            @foreach (var company in ViewBag.Companies)
            {
                <option value="@company.ComId">@company.ComName</option>
            }
        </select>
    </div>

    <!-- Shift Table -->
    <div class="table-responsive">
        <table id="shiftTable" class="table table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th>Shift Name</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Company</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="shiftTableBody">
                @foreach (var shift in Model)
                {
                    <tr id="row-@shift.ShiftId" data-comid="@shift.ComId">
                        <td>@shift.ShiftName</td>
                        <td>@shift.StartTime.ToString("HH:mm")</td>
                        <td>@shift.EndTime.ToString("HH:mm")</td>
                        <td>@(shift.Company?.ComName ?? "N/A")</td>
                        <td>
                            <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#shiftModal" onclick="openShiftModal('edit', '@shift.ShiftId')">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteShift('@shift.ShiftId')">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Shift Modal (for both Create and Edit) -->
    <div class="modal fade" id="shiftModal" tabindex="-1" aria-labelledby="shiftModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="shiftForm">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="shiftModalLabel">Add Shift</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="ShiftId" name="shiftId" />
                        <div class="mb-3">
                            <label for="ComId" class="form-label">Company</label>
                            <select id="ComId" name="comId" class="form-control" required>
                                <option value="">Select Company</option>
                                @foreach (var company in ViewBag.Companies)
                                {
                                    <option value="@company.ComId">@company.ComName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="ShiftName" class="form-label">Shift Name</label>
                            <input type="text" id="ShiftName" name="shiftName" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label for="StartTime" class="form-label">Start Time</label>
                            <input type="time" id="StartTime" name="startTime" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label for="EndTime" class="form-label">End Time</label>
                            <input type="time" id="EndTime" name="endTime" class="form-control" required />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success" id="saveButton">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize modal
        const shiftModal = new bootstrap.Modal(document.getElementById('shiftModal'));

        // Escape HTML to prevent XSS
        function escapeHtml(str) {
            if (typeof str !== 'string') return '';
            return str
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Open modal for create or edit
        function openShiftModal(mode, shiftId = '') {
            try {
                console.log(`Opening modal for ${mode} with shiftId: ${shiftId}`);
                const form = $("#shiftForm")[0];
                if (!form) {
                    console.error("Form with ID 'shiftForm' not found.");
                    alert("Form not found!");
                    return;
                }
                form.reset();
                $("#ShiftId").val("");
                $("#shiftModalLabel").text(mode === 'create' ? "Add Shift" : "Edit Shift");
                $("#saveButton").text(mode === 'create' ? "Create" : "Save Changes");

                if (mode === 'edit' && shiftId) {
                    let row = $("#row-" + shiftId);
                    if (!row.length) {
                        console.error(`Row with ID 'row-${shiftId}' not found.`);
                        alert("Shift data not found!");
                        return;
                    }
                    $("#ShiftId").val(shiftId);
                    $("#ComId").val(row.data("comid"));
                    $("#ShiftName").val(row.find("td:eq(0)").text());
                    $("#StartTime").val(row.find("td:eq(1)").text());
                    $("#EndTime").val(row.find("td:eq(2)").text());
                }

                shiftModal.show();
                console.log(`${mode} modal opened successfully`);
            } catch (error) {
                console.error(`Error opening ${mode} modal:`, error);
                alert(`Error opening ${mode} modal. Check console for details.`);
            }
        }

        // Form submission (create or update)
        $("#shiftForm").submit(function (e) {
            e.preventDefault();
            try {
                console.log("Form submission started");
                const shiftId = $("#ShiftId").val();
                const shiftName = $("#ShiftName").val().trim();
                const startTime = $("#StartTime").val();
                const endTime = $("#EndTime").val();
                const comId = $("#ComId").val();

                if (!shiftName || !startTime || !endTime || !comId) {
                    console.error("Validation failed: Missing required fields");
                    alert("Please fill in all required fields.");
                    return;
                }
                if (startTime >= endTime) {
                    console.error("Validation failed: End time must be after start time");
                    alert("End time must be after start time.");
                    return;
                }

                const formData = {
                    shiftId,
                    shiftName,
                    startTime,
                    endTime,
                    comId
                };
                console.log("Form data being sent:", formData);

                const isEdit = !!shiftId;
                const url = isEdit ? `/Shifts/ShiftEdit/${shiftId}` : '/Shifts/ShiftCreate';

                const $button = $("#saveButton");
                $button.text(isEdit ? "Saving..." : "Creating...").prop("disabled", true);

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    timeout: 10000,
                    success: function (res) {
                        console.log("Save response:", res);
                        const shift = res.shift || res; // Handle flexible response
                        const isSuccess = res.success !== undefined ? res.success : true;
                        const message = res.message || (isEdit ? "Shift updated successfully!" : "Shift created successfully!");

                        if (isSuccess && shift && shift.shiftId) {
                            const newRow = `
                                <tr id="row-${shift.shiftId}" data-comid="${shift.comId}">
                                    <td>${escapeHtml(shift.shiftName || '')}</td>
                                    <td>${shift.startTime || ''}</td>
                                    <td>${shift.endTime || ''}</td>
                                    <td>${escapeHtml(shift.comName || 'N/A')}</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#shiftModal" onclick="openShiftModal('edit', '${shift.shiftId}')">Edit</button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteShift('${shift.shiftId}')">Delete</button>
                                    </td>
                                </tr>`;
                            if (isEdit) {
                                console.log("Updating row for shiftId:", shift.shiftId);
                                $("#row-" + shift.shiftId).replaceWith(newRow);
                            } else {
                                console.log("Appending new row for shiftId:", shift.shiftId);
                                $("#shiftTableBody").append(newRow);
                            }

                            // Close modal with delay and force-remove backdrop to prevent freeze
                            setTimeout(() => {
                                shiftModal.hide();
                                $("#shiftModal").modal("hide");
                                $('body').removeClass('modal-open');
                                $('.modal-backdrop').remove();
                                console.log("Modal closed successfully");
                            }, 100);

                            $("#shiftForm")[0].reset();
                            alert(message);
                            console.log("Form submission completed successfully");
                        } else {
                            console.error("Invalid response structure or failed operation:", res);
                            alert(res.message || `Failed to ${isEdit ? 'update' : 'create'} shift. Check console for details.`);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error saving shift:", error, "Status:", status, "Response:", xhr.responseText);
                        alert(`Failed to ${isEdit ? 'update' : 'create'} shift: ` + (status === 'timeout' ? "Request timed out." : (xhr.responseJSON?.message || "Unknown error")));
                    },
                    complete: function () {
                        $button.text(isEdit ? "Save Changes" : "Create").prop("disabled", false);
                    }
                });
            } catch (error) {
                console.error("Error in form submission:", error);
                alert("Error submitting form. Check console for details.");
                $("#saveButton").text(shiftId ? "Save Changes" : "Create").prop("disabled", false);
            }
        });

        // Delete shift
        function deleteShift(shiftId) {
            try {
                if (confirm("Are you sure you want to delete this shift?")) {
                    console.log("Deleting shift with shiftId:", shiftId);
                    $.ajax({
                        url: '/Shifts/Delete/' + shiftId,
                        type: 'POST',
                        headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                        timeout: 10000,
                        success: function (res) {
                            console.log("Delete shift response:", res);
                            if (res && res.success) {
                                $("#row-" + shiftId).remove();
                                alert(res.message || "Shift deleted successfully!");
                            } else {
                                console.error("Failed to delete shift:", res);
                                alert(res.message || "Failed to delete shift.");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error deleting shift:", error, "Status:", status, "Response:", xhr.responseText);
                            alert("Failed to delete shift: " + (status === 'timeout' ? "Request timed out." : (xhr.responseJSON?.message || "Unknown error")));
                        }
                    });
                }
            } catch (error) {
                console.error("Error in deleteShift:", error);
                alert("Error deleting shift. Check console for details.");
            }
        }

        // Filter by company
        $(document).ready(function () {
            $("#companyDropdown").change(function () {
                try {
                    console.log("Filtering by company:", $(this).val());
                    const comId = $(this).val();
                    $("#shiftTableBody").empty();
                    const url = comId ? `/Shifts/GetShiftsByCompany?comId=${comId}` : '/Shifts/GetAllShifts';
                    $.getJSON(url, function (data) {
                        if (!data || data.length === 0) {
                            $("#shiftTableBody").html('<tr><td colspan="5">No shifts found.</td></tr>');
                            return;
                        }
                        $.each(data, function (i, s) {
                            const shiftId = s.shiftId || 'Unknown';
                            const shiftName = escapeHtml(s.shiftName || 'Unknown');
                            const startTime = s.startTime || '00:00';
                            const endTime = s.endTime || '00:00';
                            const comId = s.comId || '';
                            const comName = escapeHtml(s.comName || 'N/A');
                            const row = `
                                <tr id="row-${shiftId}" data-comid="${comId}">
                                    <td>${shiftName}</td>
                                    <td>${startTime}</td>
                                    <td>${endTime}</td>
                                    <td>${comName}</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#shiftModal" onclick="openShiftModal('edit', '${shiftId}')">Edit</button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteShift('${shiftId}')">Delete</button>
                                    </td>
                                </tr>`;
                            $("#shiftTableBody").append(row);
                        });
                        console.log("Filter applied successfully");
                    }).fail(function (xhr, status, error) {
                        console.error("Error filtering shifts:", error, "Status:", status, "Response:", xhr.responseText);
                        $("#shiftTableBody").html('<tr><td colspan="5">Error loading shifts. Check server status.</td></tr>');
                        alert("Failed to filter shifts: " + (xhr.responseJSON?.message || "Network error or server unavailable."));
                    });
                } catch (error) {
                    console.error("Error in company filter:", error);
                    alert("Error filtering shifts. Check console for details.");
                }
            });
        });
    </script>
}
