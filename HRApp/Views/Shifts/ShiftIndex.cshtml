@model IEnumerable<HRApp.Models.Shift>
@{
    ViewData["Title"] = "Shift Management";
    var companies = ViewBag.Companies as List<HRApp.Models.Company>;
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <!-- Button to Open Create Modal -->
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#shiftModal" onclick="openCreateModal()">+ Add Shift</button>

    <!-- Company Filter -->
    <div class="mb-3">
        <select id="companyDropdown" class="form-select w-50">
            <option value="">All Companies</option>
            @foreach (var c in companies)
            {
                <option value="@c.ComId">@c.ComName</option>
            }
        </select>
    </div>

    <!-- Shift Table -->
    <div class="table-responsive">
        <table id="shiftTable" class="table table-striped table-bordered mt-3">
            <thead>
                <tr>
                    <th>Shift Name</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Company</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="shiftTableBody">
                @foreach (var shift in Model)
                {
                    var companyName = companies.FirstOrDefault(c => c.ComId == shift.ComId)?.ComName ?? "Unknown Company";
                    <tr id="row-@shift.ShiftId" data-comid="@shift.ComId">
                        <td>@shift.ShiftName</td>
                        <td>@shift.StartTime.ToString("HH:mm")</td>
                        <td>@shift.EndTime.ToString("HH:mm")</td>
                        <td>@companyName</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="openEditModal('@shift.ShiftId')">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteShift('@shift.ShiftId')">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Shift Modal -->
    <div class="modal fade" id="shiftModal" tabindex="-1" aria-labelledby="shiftModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="shiftForm">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle">Add Shift</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="ShiftId" name="ShiftId" />
                        <div class="mb-3">
                            <label for="ComId" class="form-label">Company</label>
                            <select id="ComId" name="ComId" class="form-control" required>
                                <option value="">Select Company</option>
                                @foreach (var com in companies)
                                {
                                    <option value="@com.ComId">@com.ComName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="ShiftName" class="form-label">Shift Name</label>
                            <input type="text" id="ShiftName" name="ShiftName" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label for="StartTime" class="form-label">Start Time</label>
                            <input type="time" id="StartTime" name="StartTime" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label for="EndTime" class="form-label">End Time</label>
                            <input type="time" id="EndTime" name="EndTime" class="form-control" required />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success" id="saveButton">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize modal
        const shiftModal = new bootstrap.Modal(document.getElementById('shiftModal'));

        // Escape HTML to prevent XSS
        function escapeHtml(str) {
            if (typeof str !== 'string') return '';
            return str
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Open Create Modal
        function openCreateModal() {
            $("#shiftForm")[0].reset();
            $("#ShiftId").val('');
            $("#modalTitle").text("Add Shift");
            $("#ComId").val('');
            shiftModal.show();
        }

        // Open Edit Modal
        function openEditModal(id) {
            console.log("Fetching shift with ID:", id);
            $.getJSON('/Shifts/GetShift/' + id, function (res) {
                console.log("Shift data:", res);
                if (!res.success || !res.shift) {
                    alert("Failed to load shift data: " + (res.message || "Invalid response"));
                    return;
                }
                var shift = res.shift;
                $("#modalTitle").text("Edit Shift");
                $("#ShiftId").val(shift.shiftId);
                $("#ShiftName").val(shift.shiftName);
                $("#ComId").val(shift.comId);
                $("#StartTime").val(shift.startTime);
                $("#EndTime").val(shift.endTime);
                shiftModal.show();
            }).fail(function (xhr, status, error) {
                console.error("Edit fetch error:", {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    error: error
                });
                alert("Failed to load shift data: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        }

        // Save (Create/Update)
        $("#shiftForm").submit(function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            console.log("Form data being sent:", [...formData.entries()]);
            var id = $("#ShiftId").val();
            var url = id ? '/Shifts/ShiftEdit/' + id : '/Shifts/ShiftCreate';
            console.log("Submitting to URL:", url);
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (res) {
                    console.log("Save response:", res);
                    alert(res.message || "No message returned from server");
                    if (res.success && res.shift) {
                        let s = res.shift;
                        let shiftId = s.shiftId;
                        let shiftName = escapeHtml(s.shiftName);
                        let startTime = s.startTime;
                        let endTime = s.endTime;
                        let comId = s.comId;
                        let comName = escapeHtml(s.comName || 'Unknown Company');
                        // Check company filter
                        let currentComId = $("#companyDropdown").val();
                        if (!currentComId || currentComId === comId) {
                            let row = `
                                <tr id="row-${shiftId}" data-comid="${comId}">
                                    <td>${shiftName}</td>
                                    <td>${startTime}</td>
                                    <td>${endTime}</td>
                                    <td>${comName}</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" onclick="openEditModal('${shiftId}')">Edit</button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteShift('${shiftId}')">Delete</button>
                                    </td>
                                </tr>`;
                            if (id) {
                                console.log("Updating row for shiftId:", shiftId);
                                $("#row-" + shiftId).replaceWith(row);
                            } else {
                                console.log("Appending new row for shiftId:", shiftId);
                                $("#shiftTableBody").append(row);
                            }
                        } else {
                            console.log("Shift not added to table: company filter mismatch", { shiftComId: comId, currentComId });
                        }
                        shiftModal.hide();
                        $("#shiftForm")[0].reset();
                    } else {
                        console.error("Invalid response structure:", res);
                        alert("Failed to update table. Check console for details.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Save error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to save shift: " + (xhr.responseJSON?.message || "Unknown error"));
                }
            });
        });

        // Delete Shift
        function deleteShift(id) {
            if (!confirm("Are you sure you want to delete this shift?")) return;
            console.log("Deleting shift with ID:", id);
            $.post('/Shifts/Delete/' + id,
                { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                function (res) {
                    console.log("Delete response:", res);
                    alert(res.message || "No message returned from server");
                    if (res.success) {
                        $("#row-" + id).remove();
                    }
                }).fail(function (xhr, status, error) {
                    console.error("Delete error:", {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert("Failed to delete shift: " + (xhr.responseJSON?.message || "Unknown error"));
                });
        }

        // Company Filter
        $("#companyDropdown").change(function () {
            let comId = $(this).val();
            console.log("Selected comId:", comId);
            let url = comId ? '/Shifts/GetShiftsByCompany?comId=' + comId : '/Shifts/GetAllShifts';
            console.log("Fetching shifts from:", url);
            $("#shiftTableBody").html('<tr><td colspan="5">Loading...</td></tr>');
            $.getJSON(url, function (data) {
                console.log("Filter response:", data);
                $("#shiftTableBody").empty();
                if (data.length === 0 || (data.success === false)) {
                    $("#shiftTableBody").html('<tr><td colspan="5">No shifts found.</td></tr>');
                    return;
                }
                $.each(data, function (i, s) {
                    let shiftId = s.shiftId;
                    let shiftName = escapeHtml(s.shiftName);
                    let startTime = s.startTime;
                    let endTime = s.endTime;
                    let comId = s.comId;
                    let comName = escapeHtml(s.comName || 'Unknown Company');
                    let row = `
                        <tr id="row-${shiftId}" data-comid="${comId}">
                            <td>${shiftName}</td>
                            <td>${startTime}</td>
                            <td>${endTime}</td>
                            <td>${comName}</td>
                            <td>
                                <button class="btn btn-warning btn-sm" onclick="openEditModal('${shiftId}')">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteShift('${shiftId}')">Delete</button>
                            </td>
                        </tr>`;
                    $("#shiftTableBody").append(row);
                });
            }).fail(function (xhr, status, error) {
                console.error("Filter error:", {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    error: error,
                    url: url
                });
                alert("Failed to filter shifts: " + (xhr.responseJSON?.message || "Unknown error"));
            });
        });

        // Initialize filter based on ViewBag
        $(document).ready(function () {
            $("#companyDropdown").val('@ViewBag.SelectedComId').trigger('change');
        });
    </script>
}