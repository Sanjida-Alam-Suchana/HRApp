// <auto-generated />
using System;
using HRApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HRAPP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250918111108_AddAbsentAmountToSalary")]
    partial class AddAbsentAmountToSalary
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HRApp.Models.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AttStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("InTime")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("OutTime")
                        .HasColumnType("time without time zone");

                    b.Property<DateOnly>("dtDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("HRApp.Models.AttendanceSummary", b =>
                {
                    b.Property<Guid>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<int>("DaysAbsent")
                        .HasColumnType("integer");

                    b.Property<int>("DaysLate")
                        .HasColumnType("integer");

                    b.Property<int>("DaysPresent")
                        .HasColumnType("integer");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uuid");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("SummaryMonth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalDays")
                        .HasColumnType("integer");

                    b.HasKey("SummaryId");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.ToTable("AttendanceSummaries");
                });

            modelBuilder.Entity("HRApp.Models.Company", b =>
                {
                    b.Property<Guid>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Basic")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ComName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("HRent")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Medical")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("ComId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HRApp.Models.Department", b =>
                {
                    b.Property<Guid>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("DeptId");

                    b.HasIndex("ComId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HRApp.Models.Designation", b =>
                {
                    b.Property<Guid>("DesigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("DesigId");

                    b.HasIndex("ComId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("HRApp.Models.Employee", b =>
                {
                    b.Property<Guid>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Basic")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeptId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DesigId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<decimal>("Gross")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HRent")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Medical")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Others")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ShiftId")
                        .HasColumnType("uuid");

                    b.HasKey("EmpId");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HRApp.Models.Salary", b =>
                {
                    b.Property<Guid>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AbsentAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("AbsentDays")
                        .HasColumnType("integer");

                    b.Property<decimal>("Basic")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Gross")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HRent")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Medical")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("PayableAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("dtMonth")
                        .HasColumnType("integer");

                    b.Property<int>("dtYear")
                        .HasColumnType("integer");

                    b.HasKey("SalaryId");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("HRApp.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("ShiftId");

                    b.HasIndex("ComId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("HRApp.Models.Attendance", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Attendances")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.AttendanceSummary", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("AttendanceSummaries")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany("AttendanceSummaries")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.Department", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRApp.Models.Designation", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Designations")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRApp.Models.Employee", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("HRApp.Models.Salary", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Salaries")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.Shift", b =>
                {
                    b.HasOne("HRApp.Models.Company", "Company")
                        .WithMany("Shifts")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRApp.Models.Company", b =>
                {
                    b.Navigation("AttendanceSummaries");

                    b.Navigation("Attendances");

                    b.Navigation("Departments");

                    b.Navigation("Designations");

                    b.Navigation("Employees");

                    b.Navigation("Salaries");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HRApp.Models.Employee", b =>
                {
                    b.Navigation("AttendanceSummaries");

                    b.Navigation("Attendances");

                    b.Navigation("Salaries");
                });
#pragma warning restore 612, 618
        }
    }
}
